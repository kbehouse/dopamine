in fetch_cam __init__
Choosing the latest nvidia driver: /usr/lib/nvidia-396, among ['/usr/lib/nvidia-375', '/usr/lib/nvidia-396']
Choosing the latest nvidia driver: /usr/lib/nvidia-396, among ['/usr/lib/nvidia-375', '/usr/lib/nvidia-396']
in DQNAgent __init__ OBSERVATION_SHAPE =  84
self._observation_shape=(84, 84), len(self._observation_shape)=2
storage_element =  shape_type(name='observation', shape=(84, 84), type=<class 'numpy.uint8'>)
array_shape =  [1000000, 84, 84]
storage_element.name =  observation
storage_element.type =  <class 'numpy.uint8'>
storage_element =  shape_type(name='action', shape=(), type=<class 'numpy.int32'>)
array_shape =  [1000000]
storage_element.name =  action
storage_element.type =  <class 'numpy.int32'>
storage_element =  shape_type(name='reward', shape=(), type=<class 'numpy.float32'>)
array_shape =  [1000000]
storage_element.name =  reward
storage_element.type =  <class 'numpy.float32'>
storage_element =  shape_type(name='terminal', shape=(), type=<class 'numpy.uint8'>)
array_shape =  [1000000]
storage_element.name =  terminal
storage_element.type =  <class 'numpy.uint8'>
!!!!!!!!!replay_capacity =  1000000
in DQN _build_networks
 self.online_convnet(self.state_ph)
 --------in Rainbow network_template---------
 tf.float32 , net ->  Tensor("Online/Cast:0", shape=(1, 84, 84, 4), dtype=float32, device=/device:GPU:0)
 div 255 , net ->  Tensor("Online/div:0", shape=(1, 84, 84, 4), dtype=float32, device=/device:GPU:0)
 conv2d 32, [8,8], stride=4 , net ->  Tensor("Online/Conv/Relu:0", shape=(1, 21, 21, 32), dtype=float32, device=/device:GPU:0)
 conv2d 64, [4, 4], stride=2 , net ->  Tensor("Online/Conv_1/Relu:0", shape=(1, 11, 11, 64), dtype=float32, device=/device:GPU:0)
 conv2d 64, [3, 3], stride=1 , net ->  Tensor("Online/Conv_2/Relu:0", shape=(1, 11, 11, 64), dtype=float32, device=/device:GPU:0)
 flatten , net ->  Tensor("Online/Flatten/flatten/Reshape:0", shape=(1, 7744), dtype=float32, device=/device:GPU:0)
 512 , net ->  Tensor("Online/fully_connected/Relu:0", shape=(1, 512), dtype=float32, device=/device:GPU:0)
 fully_connected , net ->  Tensor("Online/fully_connected_1/BiasAdd:0", shape=(1, 255), dtype=float32, device=/device:GPU:0)
---before self.online_convnet(self._replay.states), self._replay.states =  Tensor("sample_replay/sample_replay/StagingArea_get:0", shape=(32, 84, 84, 4), dtype=uint8, device=/device:CPU:0)
 --------in Rainbow network_template---------
 tf.float32 , net ->  Tensor("Online_1/Cast:0", shape=(32, 84, 84, 4), dtype=float32, device=/device:GPU:0)
 div 255 , net ->  Tensor("Online_1/div:0", shape=(32, 84, 84, 4), dtype=float32, device=/device:GPU:0)
 conv2d 32, [8,8], stride=4 , net ->  Tensor("Online_1/Conv/Relu:0", shape=(32, 21, 21, 32), dtype=float32, device=/device:GPU:0)
 conv2d 64, [4, 4], stride=2 , net ->  Tensor("Online_1/Conv_1/Relu:0", shape=(32, 11, 11, 64), dtype=float32, device=/device:GPU:0)
 conv2d 64, [3, 3], stride=1 , net ->  Tensor("Online_1/Conv_2/Relu:0", shape=(32, 11, 11, 64), dtype=float32, device=/device:GPU:0)
 flatten , net ->  Tensor("Online_1/Flatten/flatten/Reshape:0", shape=(32, 7744), dtype=float32, device=/device:GPU:0)
 512 , net ->  Tensor("Online_1/fully_connected/Relu:0", shape=(32, 512), dtype=float32, device=/device:GPU:0)
 fully_connected , net ->  Tensor("Online_1/fully_connected_1/BiasAdd:0", shape=(32, 255), dtype=float32, device=/device:GPU:0)
---before self.target_convnet(self._replay.next_states)), self._replay.next_states =  Tensor("sample_replay/sample_replay/StagingArea_get:3", shape=(32, 84, 84, 4), dtype=uint8, device=/device:CPU:0)
 --------in Rainbow network_template---------
 tf.float32 , net ->  Tensor("Target/Cast:0", shape=(32, 84, 84, 4), dtype=float32, device=/device:GPU:0)
 div 255 , net ->  Tensor("Target/div:0", shape=(32, 84, 84, 4), dtype=float32, device=/device:GPU:0)
 conv2d 32, [8,8], stride=4 , net ->  Tensor("Target/Conv/Relu:0", shape=(32, 21, 21, 32), dtype=float32, device=/device:GPU:0)
 conv2d 64, [4, 4], stride=2 , net ->  Tensor("Target/Conv_1/Relu:0", shape=(32, 11, 11, 64), dtype=float32, device=/device:GPU:0)
 conv2d 64, [3, 3], stride=1 , net ->  Tensor("Target/Conv_2/Relu:0", shape=(32, 11, 11, 64), dtype=float32, device=/device:GPU:0)
 flatten , net ->  Tensor("Target/Flatten/flatten/Reshape:0", shape=(32, 7744), dtype=float32, device=/device:GPU:0)
 512 , net ->  Tensor("Target/fully_connected/Relu:0", shape=(32, 512), dtype=float32, device=/device:GPU:0)
 fully_connected , net ->  Tensor("Target/fully_connected_1/BiasAdd:0", shape=(32, 255), dtype=float32, device=/device:GPU:0)
Creating window glfw
Found 1 GPUs for rendering. Using device 0.
Steps executed: 8 Episode length: 8 Return: -1.007Steps executed: 9 Episode length: 1 Return: -1.0Steps executed: 10 Episode length: 1 Return: -1.0Steps executed: 14 Episode length: 4 Return: -1.003